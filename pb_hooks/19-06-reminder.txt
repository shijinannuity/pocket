
onRecordAfterCreateRequest((e) => {
	function addrecordintoalertintoalert(data){
			console.log("Function called");
		 let collection = $app.dao().findCollectionByNameOrId("alert");
                const record = new Record(collection, { "reminder": data["id"],"owner":data["owner"],"secondary_user":data["secondary_user"],"type": data["type"], "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": data["duedate"],"triggtime":data["duetime"] });
                $app.dao().saveRecord(record)
		return;

	}
	let id = e.record.getId()
	//let s=e.record.get("")
	let id_copy = id
	console.log("\nReminder hook\n-------\n");
	let data = $apis.requestInfo(e.httpContext).data;
	let type = data["type"];
	let owner=data["owner_user_id"];
	let secondary_user=data["secondary_user_id"];
	let title=data["title"];
	let description=data["description"]
	let app=data["app"]
 
	let duedate = data["duedate"];
	let datearr = duedate.split("-");
	let duetime = data["duetime"];

	console.log("Id:", id)
	if (type == "task") {
		console.log("-----calling-------")
		console.log(`id:${id}`);
		//try{
		console.log(`owner:${owner}`);
		//}
		//catch(err){
		//	console.log(`err:${err}`)
		//}	
		console.log(`secondary_user":${secondary_user}`);
		console.log(` "type":${type}`)
		console.log(` "title": ${title},`)
		console.log(` "description": ${description}`)
		console.log(`,"app": ${app},`);
		console.log( `"duedate":${duedate}`)
		console.log(`duetime:${duetime}`)
		let data={ "id":id,"owner":owner,"secondary_user":secondary_user, "type": type, "title": title, "description": description,"app": app, "duedate":duedate ,"duetime":duetime};
		// console.log("before calling")
		
			//addrecordintoalert(data);
			//		catch(err){
			//console.log(`"Error:${err}`)
		let collection = $app.dao().findCollectionByNameOrId("alert");
                const record = new Record(collection, { "reminder": data["id"],"owner":data["owner"],"secondary_user":data["secondary_user"],"type": data["type"], "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": data["duedate"],"triggtime":data["duetime"] });
              //  $app.dao().saveRecord(record)
	 console.log("after calling")
		

	} else {
		let duedate = data["duedate"];
		let datearr = duedate.split("-");
		let duetime = data["duetime"];
		let time_arr = duetime.split(":");
		console.log("time_Arr:" + time_arr);
		console.log("duetime:" + duetime);
		console.log("datearr:" + datearr);
		console.log("duedate:" + duedate);
		let exp = "";
		if (data["isrepeating"] == false) {
			//let collection = $app.dao().findCollectionByNameOrId("alert");
			//const record = new Record(collection, { "reminder": id, "type": type, "title": data["title"], "description": data["description"], "app": data["app"], "triggdatetime": s_time });
			//$app.dao().saveRecord(record)
			const data={ "id": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"], "description": data["description"],"app": data["app"], "duedate":date["duedate"] ,"duetime":date["duetime"]};
			 let collection = $app.dao().findCollectionByNameOrId("alert");
                const record = new Record(collection, { "reminder": data["id"],"owner":data["owner"],"secondary_user":data["secondary_user"],"type": data["type"], "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": data["duedate"],"triggtime":data["duetime"] });
                //$app.dao().saveRecord(record)

			//$app.dao().saveRecord(record)

			//let collection=$app.dao().findCollectionByNameOrId("trigger");
			//const record = new Record(collection, { "reminder": id,"triggerdate":duedate+" "+duetime})
			//$app.dao().saveRecord(record)
			//exp=`${time_arr[1]} ${time_arr[0]} ${datearr[2]} ${datearr[1]} *` 

		}
		else {
			//let startdate=new DateTime(duedate+" "+duetime)
			let dtt = `${duedate} ${duetime}Z`

			let startdate = new DateTime(dtt)
			let s_time = startdate.time();
			let termdate = data["terminatedate"];
			//console.log("Termination_date::", termdate)
			let enddate = new DateTime(termdate)
			let e_time = enddate.time();
			console.log("start:" + startdate)
			//console.log("end:"+enddate)
			//console.log("Repeat_intervel:"+data["repeat_interval"])
			console.log("s_time:" + s_time)
			//console.log("e_time:"+e_time)
			return;
			if (data["repeat_interval"] == "Daily") {

				let dayslist = data["repeat_day"];
				console.log("DAylist" + dayslist)

				while (s_time.before(e_time)) {
					//console.log("Repeat_intervel:"+data["repeat_intervel"])
					console.log("s_time inside loop:" + s_time)
					var s_time_weekday = s_time.weekday();
					if (s_time_weekday == 0) {
						s_time_weekday = 7;
					}
					console.log("s_week_day::::" + s_time_weekday)
					console.log("Condition::", dayslist.indexOf(Number(s_time_weekday)))
					if (dayslist.indexOf(Number(s_time_weekday)) != -1) {
						//const data={ "id": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"], "description": data["description"],"app": data["app"], "duedate":s_time ,"duetime":date["duetime"]};
						//addrecordintoalert(data);
						
						let collection = $app.dao().findCollectionByNameOrId("alert");
						const record = new Record(collection, { "reminder": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": s_time,"triggtime":duetime});
					//	$app.dao().saveRecord(record);

					}
					s_time = s_time.addDate(0, 0, 1);
				}
				//let repdays=data["repeat_day"]
				//if()
				//exp=`${time_arr[1]} ${time_arr[0]} * * ${data["repeat_day"].toString()}`

			}
			else if (data["repeat_interval"] == "Weekly") {
				while (s_time.before(e_time)) {
					//console.log("Repeat_intervel:"+data["repeat_intervel"])
					console.log("s_time inside loop:" + s_time)
					//const data={ "id": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"], "description": data["description"], "app": data["app"], "duedate":s_time ,"duetime":date["duetime"]};
					//addrecordintoalert(data);
					let collection = $app.dao().findCollectionByNameOrId("alert");
						const record = new Record(collection, { "reminder": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": s_time,"triggtime":duetime});
					//	$app.dao().saveRecord(record);

					//let collection = $app.dao().findCollectionByNameOrId("alert");
					//const record = new Record(collection, { "reminder": id, "type": type, "title": data["title"],
						// "description": data["description"], "app": data["app"], "triggdatetime": s_time});
					//$app.dao().saveRecord(record);
					s_time = s_time.addDate(0, 0, 7);
				}

			}
			else if (data["repeat_interval"] == "Monthly") {
				while (s_time.before(e_time)) {
					//console.log("Repeat_intervel:"+data["repeat_intervel"])
					//console.log("s_time inside loop:" + s_time)
					//const data={ "id": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"], "description": data["description"],"app": data["app"], "duedate":s_time ,"duetime":date["duetime"]};
					//addrecordintoalert(data);
					let collection = $app.dao().findCollectionByNameOrId("alert");
						const record = new Record(collection, { "reminder": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": s_time,"triggtime":duetime});
					//	$app.dao().saveRecord(record);

					//let collection = $app.dao().findCollectionByNameOrId("alert");
					//const record = new Record(collection, { "reminder": id, "type": type, "title": data["title"], 
						//"description": data["description"], "app": data["app"], "triggdatetime": s_time });
					//$app.dao().saveRecord(record);
					s_time = s_time.addDate(0, 1, 0);
				}


			}
			else {
				while (s_time.before(e_time)) {
					//console.log("Repeat_intervel:"+data["repeat_intervel"])
					//console.log("s_time inside loop:" + s_time)
					//const data={ "id": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"], "description": data["description"],"app": data["app"], "duedate":s_time ,"duetime":date["duetime"]};
					//addrecordintoalert(data);
					let collection = $app.dao().findCollectionByNameOrId("alert");
						const record = new Record(collection, { "reminder": id,"owner":data["owner_user_id"],"secondary_user":data["secondary_user_id"], "type": type, "title": data["title"],"description": data["description"], "app": data["app"], "triggdate": s_time,"triggtime":duetime});
					//	$app.dao().saveRecord(record);

					//let collection = $app.dao().findCollectionByNameOrId("alert");
					//const record = new Record(collection, { "reminder": id, "type": type, "title": data["title"], "description": data["description"],
					//	 "app": data["app"], "triggdatetime": s_time });
					//$app.dao().saveRecord(record)
					s_time = s_time.addDate(1, 0, 0);
				}


			}
		}
		//cronAdd(id_copy,exp,()=>{
		//	let collection=$app.dao().findCollectionByNameOrId("alert");
		//	const record = new Record(collection, { "reminder": id,"type":type,"title":data["title"],"description":data["description"],"app":data["app"]})
		//	$app.dao().saveRecord(record)

		//});
	}
	console.log("\n\n-------\n");

}, "reminder")
